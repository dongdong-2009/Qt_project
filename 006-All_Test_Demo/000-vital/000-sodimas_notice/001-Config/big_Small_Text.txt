大小屏文本：
1. 小屏文本，2行24列
2. 大屏文本，4行16列

其中canopen的协议之中 rpdo3, rpdo4同时控制大屏和小屏文本，rpdo3和rpdo4会随着大小屏的信号回调对应的函数

rpdo3, rpdo4 的调用速度很快，很频繁，大约20ms一次，1s基本上接近50次调用，为了减轻UI层负担，需要根据变化
来处理消息，根据变化来刷新UI的文本，每次rpdo3, rpdo4来时判断是否变化，如果大小屏文本发生变化则
发送信号，通知UI层，刷新文字。

处理逻辑如下：

先记录当前的文本信息，回调之中，先把当前文本赋值给上一次的文本
rpdo3, rpdo4 的回调之中 分别存储最新的文本内容，

比较当前文本和上一次的文本是否变化了，变化了，通知UI，更新

其中发送空白文本需要清空内容，遇到地一个00 的地方，往后全部清空掉
QString的append的方法中，测试发现，如果char的字符串中为空字符串(即'\0'),会自动被清掉，不需要reset的方法了


