#ifndef MEDIA_H
#define MEDIA_H

#include "widgetbase.h"
#ifdef VIDEO
#ifdef IMX6X
#include <gst/gst.h>
#endif
#endif

class ThreadMedia : public QThread
{
public:
    ThreadMedia(QObject *parent = 0) : QThread(parent)
    {
        m_MediaName = QString("/usr/Storage/UDisk/Media/1.avi");
        m_MediaRotate = 0;
        m_Abort = false;
        m_Stop = false;
        m_PlayMode = 0;
#ifdef IMX6X
        m_Pipeline=0;
#endif
    }
    ~ThreadMedia(){}

    void Stop(bool pFlag);
    void SetPlayMode(quint8 pMode);

    void SetVolume(int pVolume);

    void Abort();
    void Change(QString pMedia, QRect pRect, int pRotate);

protected:
    void run();

public:
#ifdef VIDEO
#ifdef IMX6X
    GstElement *m_Pipeline;
#endif
#endif
    QString m_MediaName;
    QRect   m_MediaRect;
    int     m_MediaRotate;
    bool    m_Abort;
    bool    m_Stop;
    quint8  m_PlayMode;  //>@0:����ѭ��  //>@1:����һ��ֹͣ

    int     m_Volume;
};

class ThreadAudio : public QThread
{
public:
    ThreadAudio(QObject *parent = 0) : QThread(parent)
    {
    //GstElement *m_Pipeline;
#ifdef IMX6X
      m_Pipeline=0;
#endif
    }
    ~ThreadAudio(){}

    void Play(QString pMedia);

protected:
    void run();

public:
#ifdef AUDIO
#ifdef IMX6X
   GstElement *m_Pipeline;
#endif
#endif
    QString m_MediaName;
    int     m_Volume;
};

class WidgetMedia : public WidgetBase
{
    Q_OBJECT
public:
    WidgetMedia(QWidget *parent = 0);
    ~WidgetMedia();

    void InitRC(int pRotate);
    void InitRC(QString pRcPath, bool pInititial, int pRotate);

    void SetBgImage(QString pBgImage);
    void SetPlayMode(quint8 pMode);

public slots:
    void slot_ExecOperate(AREA_OPERATE pOperate, QVariant pPara);

public:
    ThreadMedia     *m_MediaPlayer;
    QRect            m_VoRect;
    int              m_VoRotate;
};

#endif // WIDGETMEDIA_H
